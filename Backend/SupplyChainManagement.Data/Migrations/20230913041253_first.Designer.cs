// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SupplyChainManagement;

#nullable disable

namespace SupplyChainManagement.Data.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20230913041253_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Inventory", b =>
                {
                    b.Property<int>("inventory_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("inventory_id"));

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("location_id")
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity_available")
                        .HasColumnType("integer");

                    b.HasKey("inventory_id");

                    b.HasIndex("location_id");

                    b.HasIndex("product_id");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Location", b =>
                {
                    b.Property<int>("location_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("location_Id"));

                    b.Property<string>("location_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("location_Id");

                    b.ToTable("location");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("order_id"));

                    b.Property<int>("inventory_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity_ordered")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("order");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("product_id"));

                    b.Property<string>("price_per_unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("unit_of_measure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("product_id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Shipment", b =>
                {
                    b.Property<int>("shipment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("shipment_id"));

                    b.Property<int>("destination_location_id")
                        .HasColumnType("integer");

                    b.Property<int>("order_id")
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("shipment_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("shipment_status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("source_location_id")
                        .HasColumnType("integer");

                    b.HasKey("shipment_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("shipment");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("user_pass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Inventory", b =>
                {
                    b.HasOne("SupplyChainManagement.Entity.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplyChainManagement.Entity.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Order", b =>
                {
                    b.HasOne("SupplyChainManagement.Entity.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplyChainManagement.Entity.Models.Shipment", b =>
                {
                    b.HasOne("SupplyChainManagement.Entity.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplyChainManagement.Entity.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
